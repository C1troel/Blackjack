using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Singleplayer.PassiveEffects;

namespace Singleplayer
{
    public enum VulnerabilityKind
    {
        Strong,
        Weak
    }

    public enum VulnerabilityTargetType
    {
        PassiveEffect,
        DmgType,
        Material
    }

    [System.Serializable]
    public class VulnerabilityDescriptor
    {
        public VulnerabilityKind Kind;
        public VulnerabilityTargetType TargetType;

        [SerializeField] private PassiveEffectType passiveEffect;
        [SerializeField] private EffectCardDmgType dmgType;
        [SerializeField] private EffectCardMaterial material;

        public object GetTargetValue()
        {
            return TargetType switch
            {
                VulnerabilityTargetType.PassiveEffect => passiveEffect,
                VulnerabilityTargetType.DmgType => dmgType,
                VulnerabilityTargetType.Material => material,
                _ => null
            };
        }

        public bool Matches(PassiveEffectType type) =>
            TargetType == VulnerabilityTargetType.PassiveEffect && passiveEffect.Equals(type);

        public bool Matches(EffectCardDmgType type) =>
            TargetType == VulnerabilityTargetType.DmgType && dmgType.Equals(type);

        public bool Matches(EffectCardMaterial type) =>
            TargetType == VulnerabilityTargetType.Material && material.Equals(type);
    }
}